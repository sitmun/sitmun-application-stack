# Map to set $public_port to empty for default ports
map "$public_url_scheme:$public_port" $mapped_port {
    default   ":$public_port";
    "http:"  "";
    "http:80"  "";
    "https:" "";
    "https:443" "";
}

server {
  listen 80;
  server_name localhost;
 
  set $public_url_scheme "${PUBLIC_URL_SCHEME}";
  set $public_hostname "${PUBLIC_HOSTNAME}";
  set $public_port "${PUBLIC_PORT}";
  set $public_base_path "${PUBLIC_BASE_PATH}";
  set $public_path "${public_url_scheme}://${public_hostname}${mapped_port}${public_base_path}";

  location / {
    root /usr/share/nginx/html;
    index index.html;
    include /etc/nginx/mime.types;

    # Redirect /admin to /admin/ (permanent redirect)
    location = ${LOCAL_BASE_PATH}admin {
      return 301 "${public_path}admin/";
    }

    # Handle request to /admin/
    location ${LOCAL_BASE_PATH}admin/ {
      rewrite ^${LOCAL_BASE_PATH}(.*)$ /$1 break;
      try_files $uri $uri/ /index.html =404;      
    }

    # Redirect /viewer to /viewer/ (permanent redirect)
    location = ${LOCAL_BASE_PATH}viewer {
      return 301 "${public_path}viewer/";
    }

    # API paths
    location ${LOCAL_BASE_PATH}backend/ {
      proxy_pass http://backend:8080/;
      proxy_set_header X-Forwarded-Proto $public_url_scheme;
      proxy_set_header X-Forwarded-Host $public_hostname;
      proxy_set_header X-Forwarded-Port $public_port;
      proxy_set_header X-Forwarded-Prefix "${PUBLIC_BASE_PATH}backend"; 
    }

    location ${LOCAL_BASE_PATH}middleware/ {
      proxy_pass http://proxy:8080/;
      proxy_set_header X-Forwarded-Proto $public_url_scheme;
      proxy_set_header X-Forwarded-Host $public_hostname;
      proxy_set_header X-Forwarded-Port $public_port;
      proxy_set_header X-Forwarded-Prefix "${PUBLIC_BASE_PATH}middleware"; 
    }
  }
}